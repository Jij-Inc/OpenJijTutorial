{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "V_NR6GiIBDP2"
            },
            "source": [
                "# 2-\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a55\u4fa1"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "view-in-github"
            },
            "source": [
                "[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/OpenJij/OpenJijTutorial/blob/master/source/ja/002-Evaluation.ipynb)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "FbP_6wGgBDP6"
            },
            "source": [
                "\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30af\u30b9\u306e\u4e00\u3064\u306a\u306e\u3067\u6bce\u56de\u6700\u9069\u89e3\u3092\u51fa\u305b\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u8fd1\u4f3c\u89e3\u3092\u6c42\u3081\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002\n",
                "\u307e\u305f\u78ba\u7387\u7684\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u306e\u3067\u6bce\u56de\u89e3\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a55\u4fa1\u3092\u3059\u308b\u3068\u304d\u306f\u69d8\u3005\u306a\u5e73\u5747\u5024\u3092\u7528\u3044\u3066\u305d\u306e\u89e3\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u6307\u6a19\u306b\n",
                "\n",
                "- \u6210\u529f\u78ba\u7387 : Success probability\n",
                "- TTS : Time to solution\n",
                "- \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc : Resudial energy\n",
                "\n",
                "\u306e3\u3064\u304c\u3042\u308a\u307e\u3059\u3002\u7279\u306b**TTS**\u306f\u8a08\u7b97\u6642\u9593\u3092\u8868\u3059\u3082\u306e\u3067\u69d8\u3005\u306a\u8a55\u4fa1\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306f\u6700\u9069\u89e3\u306b\u3069\u308c\u304f\u3089\u3044\u8fd1\u3065\u3051\u305f\u306e\u304b\u3092\u5e73\u5747\u7684\u306b\u793a\u3059\u5024\u3067\u3059\u3002\n",
                "\n",
                "\u3053\u306e\u7ae0\u3067\u306f\u4e0a\u8a18\u306e3\u306e\u8a55\u4fa1\u6307\u6a19\u306e\u89e3\u8aac\u3068\u6e2c\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "av11BMPjBDP8"
            },
            "source": [
                "## Time to solution\n",
                "\n",
                "\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3069\u306e\u8a08\u7b97\u6642\u9593\u3067\u3082\u4f55\u304b\u3057\u3089\u306e\u8fd1\u4f3c\u89e3\u3092\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3044\u304f\u3089\u8a08\u7b97\u304c\u901f\u304f\u3066\u3082\u3001\u8aa4\u3063\u305f\u89e3\u304c\u6c42\u307e\u308b\u3088\u3046\u3067\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3053\u3067(\u4f8b\u3048\u307090%\u306e\u78ba\u7387\u3067\u6700\u9069\u89e3\u304c\u5f97\u3089\u308c\u308b\u306e\u306b\u304b\u304b\u308b\u6642\u9593\u3001\u306e\u3088\u3046\u306b)\u81ea\u5206\u304c\u5fc5\u8981\u306a\u78ba\u7387\u3067\u6700\u9069\u89e3\u304c\u7b97\u51fa\u3055\u308c\u308b\u307e\u3067\u306b\u304b\u304b\u308b\u8a08\u7b97\u6642\u9593\u3092\u6307\u6a19\u3068\u3057\u307e\u3059\u3002\n",
                "\n",
                "\"1-Introduction\"\u3067\u3082\u884c\u306a\u3063\u305f\u3088\u3046\u306b\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u8907\u6570\u56de\u884c\u3063\u305f\u4e2d\u304b\u3089\u6700\u9069\u89e3\u3092\u63a2\u3059\u305f\u3081\u3001\u8a08\u7b97\u6642\u9593\u3092\u8a55\u4fa1\u3059\u308b\u306b\u306f\u8907\u6570\u56de\u884c\u3046\u3053\u3068\u3082\u8003\u616e\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n",
                "\n",
                "> \u4f8b\u3048\u3070\u77ed\u3044\u8a08\u7b97\u6642\u9593$\\tau_{short}$\u3067\u6700\u9069\u89e3\u3092\u51fa\u3059\u78ba\u7387\u304c\u4f4e\u304f\u3066\u3082\u3001\u305d\u306e\u8a08\u7b97\u6642\u9593$\\tau_{short}$\u3067\u8907\u6570\u56de\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3092\u3057\u305f\u65b9\u304c\u3001\u3088\u308a\u9577\u3044\u8a08\u7b97\u6642\u9593$\\tau_{long}$\u30921\u56de\u884c\u3046\u3088\u308a\u3082\u8a08\u7b97\u6642\u9593\u304c\u77ed\u304f\u3066\u6e08\u3080\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n",
                "> \u306a\u306e\u3067\u8a08\u7b97\u6642\u9593\u3092\u8003\u616e\u3059\u308b\u306b\u306f\u5358\u7d14\u306b\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3092\u6bd4\u8f03\u3059\u308b\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206\u306a\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n",
                "\n",
                "\u8907\u6570\u56de\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u3082\u8003\u616e\u306b\u5165\u308c\u3066\u3001\u4e0a\u8ff0\u306e\u8a08\u7b97\u6642\u9593\u3092\u7b97\u51fa\u3057\u305f\u3082\u306e\u3092**Time to solution(TTS)**\u3068\u547c\u3073\u307e\u3059\u3002TTS\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u5c0e\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "kqwBOHdVBDP9"
            },
            "source": [
                "1\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3092$\\tau$\u3068\u3057\u30011\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3067\u6700\u9069\u89e3\u304c\u7b97\u51fa\u3055\u308c\u308b\u78ba\u7387\u3092$p_s(\\tau)$\u3068\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e$p_s(\\tau)$\u304c\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a55\u4fa1\u306b\u7528\u3044\u3089\u308c\u308b\u6210\u529f\u78ba\u7387\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u5b9a\u7fa9\u304b\u3089\u30011\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3067\u6700\u9069\u89e3\u304c\u7b97\u51fa\u3055\u308c\u306a\u3044\u5931\u6557\u78ba\u7387\u306f\n",
                "\n",
                "$$1-p_s(\\tau)$$\n",
                "\n",
                "\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092$R$\u56de\u7e70\u308a\u8fd4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3059\u308b\u3068\u3001\u3053\u306e$R$\u56de\u5168\u3066\u3067\u6700\u9069\u89e3\u304c\u7b97\u51fa\u3055\u308c\u306a\u3044\u78ba\u7387\u306f\n",
                "\n",
                "$$\\{ 1-p_s(\\tau) \\}^R$$\n",
                "\n",
                "\u3067\u3059\u3002\u3088\u3063\u3066$R$\u56de\u306e\u3046\u30611\u56de\u3067\u3082\u6700\u9069\u89e3\u3092\u5f97\u308b\u78ba\u7387$p_R$\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6c42\u307e\u308a\u307e\u3059\u3002\n",
                "\n",
                "$$p_R = 1-\\{ 1-p_s(\\tau)\\}^R$$\n",
                "\n",
                "\u3053\u306e\u5f0f\u3092$R$\u306b\u3064\u3044\u3066\u89e3\u304d\u307e\u3057\u3087\u3046\u3002\u3059\u308b\u3068\n",
                "\n",
                "$$R = \\frac{\\ln(1-p_R)}{\\ln\\{1-p_s(\\tau)\\}}$$\n",
                "\n",
                "\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306b1\u56de\u306e\u8a08\u7b97\u6642\u9593$\\tau$\u3092\u304b\u3051\u308b\u3068\u7dcf\u8a08\u7b97\u6642\u9593\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u304cTime to solution (TTS, \u89e3\u3092\u5f97\u308b\u307e\u3067\u306b\u304b\u304b\u308b\u8a08\u7b97\u6642\u9593)\u3067\u3059\u3002\n",
                "\n",
                "$${\\rm TTS}(\\tau, p_R) = \\tau R = \\tau \\frac{\\ln(1-p_R)}{\\ln\\{1-p_s(\\tau)\\}}$$\n",
                "\n",
                "${\\rm TTS}(\\tau, p_R)$\u306f\u4e00\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u306b$\\tau$\u306e\u8a08\u7b97\u6642\u9593\u3001\u78ba\u7387$p_s(\\tau)$\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u3066\u6700\u9069\u89e3\u304c\u5f97\u3089\u308c\u308b\u3068\u304d\u3001\u78ba\u7387$p_R$\u3067\u6700\u9069\u89e3\u304c\u5f97\u3089\u308c\u308b\u307e\u3067\u306e\u7e70\u308a\u8fd4\u3057\u56de\u6570\u3082\u8003\u616e\u3057\u305f\u7dcf\u8a08\u7b97\u6642\u9593\u306b\u306a\u308a\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "UH5K7TpfBDP-"
            },
            "source": [
                "\u5b9f\u969b\u306e\u8a08\u7b97\u306e\u8a55\u4fa1\u3067\u306f$p_R$\u3092\u5b9a\u6570\u3067\u4e0e\u3048\u307e\u3059\u3002\u7814\u7a76\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u5024\u3068\u3057\u3066\u306f\u3001$p_R=0.99$\u304c\u591a\u3044\u3067\u3059\u3002\u305d\u3057\u3066\u69d8\u3005\u306a\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593$\\tau$\u3067$p_s(\\tau)$\u3092\u8a08\u7b97\u3057\u3001\u305d\u308c\u3089\u3092\u7528\u3044\u3066${\\rm TTS}(\\tau, p_R)$\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "Y_aOax-OBDP_"
            },
            "source": [
                "### OpenJij \u3067\u5b9f\u9a13\u3092\u884c\u3063\u3066TTS\u3092\u6e2c\u308b\n",
                "\n",
                "\u5b9f\u969b\u306bOpenJij\u3092\u4f7f\u3063\u3066TTS\u3092\u56f3\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002  \n",
                "\u4ee5\u4e0b\u3067\u306f1\u6b21\u5143\u53cd\u5f37\u78c1\u6027Ising model\u3092\u8003\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3\u3067\u8868\u73fe\u3055\u308c\u308b\u7269\u7406\u30e2\u30c7\u30eb\u3067\u3059\u3002\n",
                "\n",
                "$$H(\\{\\sigma_i\\}) = \\sum_{i=0}^{N-1} J_{i, i+1}\\sigma_i \\sigma_{i+1} + \\sum_{i=0}^{N-1} h_i \\sigma_i$$\n",
                "\n",
                "\u3053\u3053\u3067\u306f$J_{ij} \\in [0.1, 1.0]$\u3001$h_0 = -1$\u3067\u4ed6\u306e\u7e26\u78c1\u5834\u306f0\u3092\u8003\u3048\u307e\u3059\u3002$J_{ij} > 0$(\u53cd\u5f37\u78c1\u6027)\u3088\u308a\u3001\u5404\u30b9\u30d4\u30f3\u306f\u7570\u306a\u308b\u5411\u304d\u3092\u5411\u304f\u3068\u30a8\u30cd\u30eb\u30ae\u30fc\u304c\u4e0b\u304c\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u6700\u9069\u89e3\u3068\u306a\u308b$\\{\\sigma_i\\}$\u306f$1, -1, 1, -1, \\cdots$ \u306e\u3088\u3046\u306b\u3001\u5024\u304c\u4ea4\u4e92\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f$h_0=-1$\u3088\u308a\u30010\u756a\u76ee\u306e\u30b9\u30d4\u30f3\u306f$\\sigma_0 =1$\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u6700\u9069\u89e3\u306f$1, -1, 1, -1, \\cdots$\u3068\u306a\u308a\u307e\u3059\u3002\n",
                "\n",
                "\u3064\u307e\u308a\u300c\u3053\u306e\u554f\u984c\u306eTTS\u3092\u6c42\u3081\u3088\u300d\u3068\u3044\u3046\u554f\u984c\u306f\u3001$1, -1, 1, \\cdots$\u3092\u5f97\u308b\u305f\u3081\u306b\u304b\u304b\u308b\u7dcf\u8a08\u7b97\u6642\u9593\u3068\u306a\u308a\u307e\u3059\u3002  \n",
                "\u4e0a\u8ff0\u306eIsing model\u3092\u89e3\u304d\u30011\u56de\u306e\u8a08\u7b97\u6642\u9593\u3092\u4f38\u3070\u3059\u3068TTS\u304c\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 20,
            "metadata": {},
            "outputs": [],
            "source": [
                "import random\n",
                "import numpy as np\n",
                "import matplotlib.pyplot as plt\n",
                "\n",
                "# OpenJij\u3092import\u3057\u307e\u3059\u3002\n",
                "import openjij as oj "
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 21,
            "metadata": {},
            "outputs": [],
            "source": [
                "# \u53cd\u5f37\u78c1\u60271\u6b21\u5143Ising model\u3092\u4f5c\u308a\u307e\u3059\u3002\n",
                "N = 30\n",
                "h = {0: -10}\n",
                "J = {(i, i+1): 1 for i in range(N-1)}"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "63j1bHf1BDQR"
            },
            "source": [
                "## TTS\u3092\u8a08\u7b97\u3057\u3066\u307f\u308b\n",
                "\n",
                "openjij\u306e`sample_ising`\u307e\u305f\u306f`sample_qubo`\u304b\u3089\u8fd4\u3063\u3066\u304f\u308b Response \u30af\u30e9\u30b9\u306f`info`\u3068\u3044\u3046\u30e1\u30f3\u30d0\u5909\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002`info`\u306b\u306fsampler\u3054\u3068\u306b\u7570\u306a\u308b\u60c5\u5831\u304c\u8f9e\u66f8\u578b\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307b\u3068\u3093\u3069\u306eSampler\u306b\u306f`'execution_time'`\u3068\u3044\u3046key\u3067\u3001\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e1\u56de\u306e\u5b9f\u884c\u6642\u9593(\u5358\u4f4d\u306f$\\mu$ s)\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002  \n",
                "SASampler\u306e\u5834\u5408\u306fSimulated Annealing\u306e1\u56de\u3042\u305f\u308a\u306e\u8a08\u7b97\u6642\u9593\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 79,
            "metadata": {},
            "outputs": [],
            "source": [
                "# \u6700\u9069\u89e3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n",
                "correct_state = [(-1)**i for i in range(N)]\n",
                "# \u6700\u9069\u5024\u3092\u8a08\u7b97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n",
                "bqm = oj.BinaryQuadraticModel.from_ising(h, J)\n",
                "minimum_energy = bqm.energy(correct_state)\n",
                "\n",
                "# TTS \u3092\u8a08\u7b97\u3059\u308b\u306e\u306b\u5fc5\u8981\u306apR\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "pR = 0.99\n",
                "\n",
                "# Sampler\u306e\u5f15\u6570\u306e \u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6e21\u3059\u30ea\u30b9\u30c8: num_sweeps_list\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 \n",
                "# num_sweeps\u306f\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u4e2d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(\u6e29\u5ea6, \u6a2a\u78c1\u5834)\u3092\u4e0b\u3052\u3066\u3044\u304f\u3068\u304d\u306e\u5206\u5272\u6570\u3067\u3059\u3002\n",
                "# \u3088\u3063\u3066\u5897\u3084\u3059\u307b\u3069\u3086\u3063\u304f\u308a\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3092\u3059\u308b\u3053\u3068\u306b\u76f8\u5f53\u3057\u3001\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u304c\u4f38\u3073\u307e\u3059\u3002\n",
                "num_sweeps_list = [30, 50, 80, 100, 150, 200]\n",
                "\n",
                "TTS_list = []       # \u5404\u8a08\u7b97\u6642\u9593\u306b\u5bfe\u3059\u308bTTS\u3092\u683c\u7d0d\u3057\u3066\u304a\u304f\u30ea\u30b9\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "tau_list = []        # \u8a08\u7b97\u6642\u9593\u3092\u683c\u7d0d\u3057\u3066\u304a\u304f\u30ea\u30b9\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "e_mean_list = []  # \u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5e73\u5747\u5024\n",
                "e_min_list = []    # \u6700\u5c0f\u30a8\u30cd\u30eb\u30ae\u30fc\n",
                "\n",
                "# \u8a08\u7b97\u306e\u904e\u7a0b\u3067\u6210\u529f\u78ba\u7387\u304c\u6c42\u307e\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u683c\u7d0d\u3057\u3066\u304a\u304f\u30ea\u30b9\u30c8\u3082\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "ps_list = []\n",
                "\n",
                "# \u78ba\u7387\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b1\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3046\u56de\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "num_reads = 1000\n",
                "\n",
                "for num_sweeps in num_sweeps_list:\n",
                "    sampler = oj.SASampler(num_sweeps=num_sweeps, num_reads=num_reads)  \n",
                "    response = sampler.sample_ising(h, J)\n",
                "\n",
                "    # \u8a08\u7b97\u7d50\u679c\u306e\u3046\u3061\u3001\u6700\u9069\u89e3\u306e\u6570\u3092\u6570\u3048\u3066\u6700\u9069\u89e3\u3092\u5f97\u305f\u78ba\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "    tau = response.info['execution_time']\n",
                "    \n",
                "    # ps\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u6700\u9069\u5024\u4ee5\u4e0b\u306e\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\n",
                "    energies = response.energies\n",
                "    ps = len(energies[energies <= minimum_energy])/num_reads\n",
                "    \n",
                "    \n",
                "    # ps = 0\u306e\u3068\u304dTTS\u304c\u7121\u9650\u5927\u306b\u767a\u6563\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u305d\u308c\u3092\u56de\u907f\u3057\u307e\u3059\u3002\n",
                "    if ps == 0.0:\n",
                "        continue\n",
                "    \n",
                "    # TTS\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "    TTS_list.append(np.log(1-pR)/np.log(1-ps)*tau if ps < pR else tau)\n",
                "    tau_list.append(tau)\n",
                "\n",
                "    # \u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "    ps_list.append(ps)\n",
                "    \n",
                "    e_mean_list.append(np.mean(energies))\n",
                "    e_min_list.append(np.min(energies))"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 80,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": [
                            "Text(0, 0.5, 'Success probability')"
                        ]
                    },
                    "execution_count": 80,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": [
                            "<Figure size 1080x216 with 2 Axes>"
                        ]
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": [
                "# \u5404\u7a2e\u63cf\u753b\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n",
                "fig, (axL, axR) = plt.subplots(ncols=2, figsize=(15,3))\n",
                "plt.subplots_adjust(wspace=0.4)\n",
                "fontsize = 10\n",
                "\n",
                "# TTS\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n",
                "axL.plot(tau_list, TTS_list, '-o')\n",
                "axL.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axL.set_ylabel('TTS', fontsize=fontsize)\n",
                "\n",
                "# \u6210\u529f\u78ba\u7387ps\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n",
                "axR.plot(tau_list, ps_list, '-o')\n",
                "axR.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axR.set_ylabel('Success probability', fontsize=fontsize)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001TTS\u3068\u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e0a\u306e2\u3064\u306e\u56f3\u306f\u4e21\u65b9\u3068\u3082\u3001\u6a2a\u8ef8\u304c1\u56de\u306e\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u306b\u304b\u304b\u308b\u8a08\u7b97\u6642\u9593\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u304c\u5897\u52a0\u3059\u308b\u3068TTS\u3082\u5897\u52a0\u3059\u308b\u50be\u5411\u306b\u3042\u308a\u307e\u3059\u3002\u5fc5\u8981\u306a\u6210\u529f\u78ba\u7387\u304c\u88dc\u511f\u3067\u304d\u305f\u6642\u70b9\u3067\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u3092\u3084\u3081\u305f\u3044\u3068\u304d\u306e\u6307\u6a19\u3068\u3057\u3066\u3001\u3053\u308c\u3089\u3092\u6709\u52b9\u306b\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n",
                "\n",
                "TTS\u3092\u7e26\u8ef8\u306b\u6a2a\u8ef8\u306bannealing time \u3092\u53d6\u3063\u305f\u56f3\u306b\u304a\u3044\u3066\u3001\u6700\u5c0f\u306eTTS\u304c\u691c\u8a3c\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3059\u308b\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6700\u826f\u306a\u8a08\u7b97\u6642\u9593\u3068\u306a\u308a\u307e\u3059\u3002\n",
                "\n",
                "\u3053\u306e\u6700\u5c0f\u306eTTS\u304c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a08\u7b97\u6642\u9593\u3068\u3057\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u6307\u6a19\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3069\u308c\u304f\u3089\u3044\u306e\u8fd1\u4f3c\u6bd4\u3064\u307e\u308a\u3001\u30b3\u30b9\u30c8\u3092\u4e0b\u3052\u3089\u308c\u305f\u304b\u3092\u8a55\u4fa1\u6307\u6a19\u3068\u3057\u3066\u7528\u3044\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u7269\u7406\u3067\u306f\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u3068\u3044\u3046\u6700\u9069\u5024\u304b\u3089\u306e\u5dee\u5206\u306e\u5e73\u5747\u5024\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n",
                "\n",
                "\u8fd1\u4f3c\u6bd4\n",
                "$$\n",
                "R = \\langle E \\rangle / E_{\\min}\n",
                "$$\n",
                "\n",
                "\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\n",
                "$$\n",
                "E_{\\text{res}} = \\langle E \\rangle - E_{\\min}\n",
                "$$\n",
                "\u7269\u7406\u3067\u306f\u30b3\u30b9\u30c8\u5024\u304c\u5909\u6570\u306e\u6570$N$\u306b\u6bd4\u4f8b\u3059\u308b\u554f\u984c\u3092\u6271\u3046\u3053\u3068\u304c\u591a\u3044\u306e\u3067$(\\langle E \\rangle - E_{\\min})/N$\u306e\u3088\u3046\u306b\u30b5\u30a4\u30ba\u3067\u898f\u683c\u5316\u3057\u305f\u308a\u3001\n",
                "\u6700\u9069\u5024\u3067$(\\langle E \\rangle - E_{\\min})/|E_{\\min}|$\u306e\u3088\u3046\u306b\u898f\u683c\u5316\u3059\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n",
                "\n",
                "\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u6700\u9069\u89e3\u3078\u306e\u6f38\u8fd1\u7684\u306a\u53ce\u675f\u6027\u304c\u5b58\u5728\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u306e\u3067\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u306f\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3092\u9577\u304f\u3059\u308c\u3070\u3001\u3053\u306e\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc vs \u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u4e0a\u8a18\u306eOpenJij\u306e\u30c6\u30b9\u30c8\u3067\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5e73\u5747\u5024\u3092\u4fdd\u5b58\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u305d\u306e\u7d50\u679c\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 93,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": [
                            "<Figure size 432x288 with 1 Axes>"
                        ]
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": [
                "plt.plot(tau_list, (e_mean_list - minimum_energy)/np.abs(minimum_energy), '-o', label='mean')\n",
                "plt.plot(tau_list, (e_min_list - minimum_energy)/np.abs(minimum_energy), '-o', label='lowest')\n",
                "plt.xlabel('annealing time', fontsize=fontsize)\n",
                "plt.ylabel('Residual energy', fontsize=fontsize)\n",
                "plt.legend()\n",
                "plt.show()"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "\u3057\u3063\u304b\u308a\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u304c\u4f38\u3073\u308b\u3054\u3068\u306b\u5e73\u5747\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u304c\u4e0b\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u5148\u307b\u3069\u306f\u6210\u529f\u78ba\u7387\u304b\u3089TTS\u306a\u3069\u3092\u8a08\u7b97\u3057\u307e\u3057\u305f\u304c\u3001\u306a\u304b\u306a\u304b\u554f\u984c\u304c\u96e3\u3057\u304f\u3001\u6700\u9069\u89e3\u304c\u5f97\u3089\u308c\u306a\u3044\u5834\u5408\u306b\u3061\u3083\u3093\u3068\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u308b\u304b\u3092\u56f3\u308b\u6307\u6a19\u3068\u3057\u3066\u3082\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306f\u6709\u52b9\u3067\u3059\u3002\n",
                "\u307e\u305f\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306f\u5f97\u3089\u308c\u305f\u30a8\u30cd\u30eb\u30ae\u30fc\u5024\u3092\u6700\u9069\u5024\u3067\u30b7\u30d5\u30c8\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u6700\u9069\u5024\u3092\u77e5\u3089\u306a\u3044\u5834\u5408\u3067\u3082\u3001\u30a8\u30cd\u30eb\u30ae\u30fc vs \u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3068\u3044\u3046\u30d7\u30ed\u30c3\u30c8\u306f\u6709\u52b9\u3067\u3059\u3002\u3061\u3083\u3093\u3068\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u304c\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\uff1f\u6700\u9069\u5024\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u3067\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03\u306a\u3069\u3092\u884c\u3046\u969b\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "ekqnlWy_BDQY"
            },
            "source": [
                "\u3053\u3053\u307e\u3067\u306f\u539f\u7406\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u304c\u3001OpenJij\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067TTS, \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc, \u6210\u529f\u78ba\u7387\u3092\u8a55\u4fa1\u3057\u3066\u304f\u308c\u308b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u95a2\u6570`openjij.solver_benchmark`\u304c\u5b58\u5728\u3057\u307e\u3059\u3002  \n",
                "\n",
                "## solver_benchmark\u95a2\u6570\n",
                "\n",
                "\u4e0a\u8ff0\u306e\u901a\u308a\u3001solver_benchmark\u95a2\u6570\u306fTTS, \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc, \u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3057\u3001\u305d\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n",
                "\n",
                "\u4ee5\u4e0b\u306b\u5f15\u6570\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n",
                "\n",
                "- solver: function  \n",
                "    `Response`\u30af\u30e9\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002`time`\u3068`num_reads`\u3068\u3044\u3046\u5f15\u6570\u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n",
                "    `time`\u306f\u8a08\u7b97\u6642\u9593\u3092\u5236\u5fa1\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002`SASampler`\u306e\u5834\u5408\u306f`num_sweeps`\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n",
                "    `num_reads`\u306fTTS\u3084\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306a\u3069\u3092\u8a08\u7b97\u3059\u308b\u3068\u304d\u306b\u5fc5\u8981\u306a\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n",
                "    \u307e\u305f\u95a2\u6570\u306e\u623b\u308a\u5024\u306e`Response.info`\u306b\u306f\u3001`time_name`\u3068\u3044\u3046\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u6587\u5b57\u5217\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u6301\u3061\u3001`time_name`\u306b\u7d10\u3065\u304f\u5024\u306f1\u56de\u3042\u305f\u308a\u306e\u8a08\u7b97\u6642\u9593\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n",
                "- time_list: list  \n",
                "    solver\u306e`time`\u5f15\u6570\u306b\u5165\u308c\u308b\u5024\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n",
                "- solutions: list(list: state)  \n",
                "    \u57fa\u5e95\u72b6\u614b(\u6700\u9069\u89e3)\u3068\u306a\u308b\u72b6\u614b\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\u7e2e\u9000(\u540c\u3058\u72b6\u614b\u304c\u8907\u6570\u3042\u308a\u898b\u5206\u3051\u304c\u3064\u304b\u306a\u3044\u72b6\u614b)\u3057\u3066\u3044\u308b\u5834\u5408\u306f[state1, state2]\u306e\u3088\u3046\u306b\u3001\u8907\u6570\u306e\u72b6\u614b\u3092\u5165\u308c\u307e\u3059\u3002\n",
                "- args: dict\n",
                "    solver\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5fc5\u8981\u306a\u5834\u5408\u306b\u3064\u3051\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`args = {}`\u3067\u3059\u3002\n",
                "- p_r: 0 < float <= 1  \n",
                "    TTS\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5024\u3067\u3059\u3002\u4e0a\u8ff0\u306eTTS\u306e\u8aac\u660e\u306ep_R\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n",
                "- ref_energy: float  \n",
                "    \u53c2\u7167\u30a8\u30cd\u30eb\u30ae\u30fc\u3067\u3059\u3002\u6b21\u306emeasure_with_energy\u3068\u5408\u308f\u305b\u3066\u7528\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`ref_energy = 0`\u3067\u3059\u3002\n",
                "- measure_with_energy: bool  \n",
                "    False: \u30b9\u30d4\u30f3\u306e\u72b6\u614b\u304c\u57fa\u5e95\u72b6\u614b\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u6210\u529f\u3068\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002  \n",
                "    True: \u30a8\u30cd\u30eb\u30ae\u30fc\u304c\u5148\u307b\u3069\u306eref_energy\u4ee5\u4e0b\u306e\u3068\u304d\u3001\u6210\u529f\u3068\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\u57fa\u5e95\u72b6\u614b\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u7528\u3044\u307e\u3059\u3002  \n",
                "    \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fFalse\u3067\u3059\u3002\n",
                "- time_name: str  \n",
                "    `Response.info`\u306b\u5165\u3063\u3066\u3044\u308b\u5b9f\u884c\u6642\u9593\u3068\u7d10\u3065\u304f\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`'execution_time'`\u3067\u3059\u3002\n",
                "    \n",
                "\u8fd4\u308a\u5024\u306fbenchmark\u8a08\u7b97\u306e\u7d50\u679c\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8f9e\u66f8\u578b\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n",
                "\n",
                "- time: \u5b9f\u884c\u6642\u9593\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n",
                "- success_prob: \u6210\u529f\u78ba\u7387\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n",
                "- tts: TTS\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n",
                "- residual_energy: \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n",
                "- info: (dict) \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u60c5\u5831\u3067\u3059\u3002\n",
                "\n",
                "\u6b21\u306f\u3001\u3053\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u95a2\u6570\u3092\u7528\u3044\u3066TTS\u306a\u3069\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 10,
            "metadata": {
                "colab": {},
                "colab_type": "code",
                "id": "UsT_OrHpBDQZ",
                "scrolled": true
            },
            "outputs": [],
            "source": [
                "# \u6700\u9069\u89e3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n",
                "correct_state = [(-1)**i for i in range(N)]\n",
                "\n",
                "# num_sweeps\u3068num_reads\u306e\u53cd\u5fa9\u6570\u3092\u4e0e\u3048\u307e\u3059\u3002\n",
                "num_sweeps_list = list(range(10, 51, 10))  # [10, 20, 30, 40, 50]\n",
                "num_reads = 100\n",
                "\n",
                "# benchmark\u95a2\u6570\u3092\u7528\u3044\u3066TTS, \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc, \u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "result = oj.solver_benchmark(\n",
                "                      solver=lambda time, **args: oj.SASampler(num_sweeps=time, num_reads=num_reads).sample_ising(h,J), \n",
                "                      time_list=num_sweeps_list, solutions=[correct_state], p_r=0.99\n",
                "            )"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 11,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 245
                },
                "colab_type": "code",
                "id": "cZ1cs-g1BDQc",
                "outputId": "faf086d7-83b4-48e8-f75a-d2eefbac563d"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": [
                            "Text(0, 0.5, 'Success probability')"
                        ]
                    },
                    "execution_count": 11,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": [
                            "<Figure size 1080x216 with 3 Axes>"
                        ]
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": [
                "# \u5404\u7a2e\u63cf\u753b\u3092\u884c\u3046\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n",
                "fig, (axL,axC,axR) = plt.subplots(ncols=3, figsize=(15,3))\n",
                "plt.subplots_adjust(wspace=0.4)\n",
                "fontsize = 10\n",
                "\n",
                "# TTS\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n",
                "axL.plot(result['time'], result['tts'])\n",
                "axL.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axL.set_ylabel('TTS', fontsize=fontsize)\n",
                "\n",
                "# \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n",
                "axC.plot(result['time'], result['residual_energy'])\n",
                "axC.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axC.set_ylabel('Residual energy', fontsize=fontsize)\n",
                "\n",
                "# \u6700\u9069\u89e3\u304c\u51fa\u73fe\u3057\u305f\u78ba\u7387\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n",
                "axR.plot(result['time'], result['success_prob'])\n",
                "axR.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axR.set_ylabel('Success probability', fontsize=fontsize)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "F1MP6xatBDQf"
            },
            "source": [
                "\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u7c21\u5358\u306b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  \n",
                "\n",
                "\u5148\u307b\u3069\u3068\u540c\u3058\u53cd\u5f37\u78c1\u60271\u6b21\u5143Ising model\u3092\u89e3\u3044\u3066\u3044\u308b\u305f\u3081\u3001TTS\u3068\u6210\u529f\u78ba\u7387\u306f\u5148\u307b\u3069\u3068\u540c\u69d8\u306e\u5358\u8abf\u5897\u52a0\u30b0\u30e9\u30d5\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059(\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u30b9\u306a\u89e3\u6cd5\u306a\u306e\u3067\u3001\u53b3\u5bc6\u306a\u8a08\u7b97\u7d50\u679c\u306f\u6bce\u56de\u5909\u308f\u308a\u307e\u3059)\u3002\n",
                "\n",
                "\u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc\u306b\u3064\u3044\u3066\u3082\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u6642\u9593\u3092\u5897\u52a0\u3055\u305b\u3066\u8a08\u7b97\u3059\u308c\u3070\u3001\u3044\u3064\u304b\u306f\u53ce\u675f\u3059\u308b\u3053\u3068\u304c\u4e88\u60f3\u3055\u308c\u307e\u3059\u3002\n",
                "\n",
                "`solver`\u306b\u5165\u308c\u308b\u95a2\u6570\u306f`Response`\u30af\u30e9\u30b9\u3092\u8fd4\u3057\u3066\u3001`.info['execution_time']`\u306b\u8a08\u7b97\u6642\u9593\u3092\u683c\u7d0d\u3057\u3066\u304a\u3051\u3070\u3069\u306e\u3088\u3046\u306a\u81ea\u4f5c\u95a2\u6570\u3092\u4ee3\u5165\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002  \n",
                "\n",
                "\u4ee5\u4e0b\u306b\u9069\u5f53\u306a\u30e6\u30fc\u30b6\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u5b9f\u884c\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002[1, 1, 1, 1,...]\u3068[1, -1, 1, -1,...]\u3068[-1, 1, -1, 1,...]\u306e3\u3064\u306e\u30b9\u30d4\u30f3\u72b6\u614b\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u4e00\u3064\u306e\u72b6\u614b\u3092\u8fd4\u3059\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30cb\u30fc\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6700\u9069\u89e3\u306f[1, -1, 1, -1,...]\u3068\u3057\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 28,
            "metadata": {
                "colab": {},
                "colab_type": "code",
                "id": "QDHCChaRBDQg"
            },
            "outputs": [],
            "source": [
                "import time \n",
                "\n",
                "def anti_ferro_solver(time_param, num_reads, h, J):\n",
                "#     \"\"\"\n",
                "#     [1, 1, 1,...]\u3068[1,-1,1,...]\u3068[-1,1,-1,...]\u306e3\u3064\u306e\u72b6\u614b\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3076\u95a2\u6570\u3067\u3059\u3002\n",
                "#     \"\"\"\n",
                "    \n",
                "    # \u5165\u529b\u3055\u308c\u305f h \u3068 J \u304b\u3089\u6dfb\u5b57\u306e\u96c6\u5408\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n",
                "    indices = set(h.keys())\n",
                "    indices = list(indices | set([key for keys in J.keys() for key in keys]))\n",
                "    \n",
                "    # [1, 1, 1,...]\u306e\u72b6\u614b\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n",
                "    ones_state = list(np.ones(len(indices), dtype=int))\n",
                "    \n",
                "    # [-1, 1, -1,...]\u306e\u72b6\u614b\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n",
                "    minus_plus_state = np.ones(len(indices), dtype=int)\n",
                "    minus_plus_state[::2] *= -1\n",
                "    # [1, -1, 1,...]\u306e\u72b6\u614b\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n",
                "    plus_minus_state = -1 * minus_plus_state\n",
                "    \n",
                "    # \u5b9f\u884c\u6642\u9593\u3092\u8a08\u6e2c\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\n",
                "    start = time.time()\n",
                "    _states = [ones_state, list(minus_plus_state), list(plus_minus_state)]\n",
                "    \n",
                "    # 3\u3064\u306e\u72b6\u614b\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b1\u3064\u306e\u72b6\u614b\u3092\u9078\u51fa\u3057\u307e\u3059\u3002\n",
                "    state_record = [_states[np.random.randint(3)] for _ in range(num_reads)]\n",
                "    # state_record\u3092ndarray\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n",
                "    state_record = np.array(state_record)\n",
                "    \n",
                "    # \u3053\u3053\u3067\u306f\u9069\u5f53\u306b\u8a08\u7b97\u6642\u9593\u3092\u304b\u3055\u5897\u3057\u3057\u307e\u3059\u3002\n",
                "    exec_time = (time.time()-start) * 10**6 * time_param\n",
                "    # \u3053\u3053\u3067\u306f\u9069\u5f53\u306b\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "    energies = [sum(state) for state in state_record]\n",
                "    \n",
                "    # \u72b6\u614b\u306e\u30ea\u30b9\u30c8\u3068\u6dfb\u5b57\u3092\u7d10\u3065\u3051\u308b\u305f\u3081\u306b\u30011\u3064\u306e\u30bf\u30d7\u30eb\u306b\u3057\u307e\u3059\u3002\n",
                "    samples_like = (state_record, indices)\n",
                "        \n",
                "    # dimod\u306efrom_samples\u3092\u53c2\u8003\u306b\u3001Response\u30af\u30e9\u30b9\u306b\u72b6\u614b\u3068\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\n",
                "    response = oj.Response.from_samples(samples_like=samples_like, energy=energies, vartype='SPIN')\n",
                "    # response.info\u306e'execution_time'\u30ad\u30fc\u306b\u8a08\u7b97\u6642\u9593\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n",
                "    response.info['execution_time'] = exec_time\n",
                "    \n",
                "    return response"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "OpenJij\u306eresponse\u306fdimod\u306eSampleSet\u3092\u53c2\u8003\u306b\u3057\u3066\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n",
                "\u305d\u306e\u305f\u3081\u3001OpenJij\u306b\u6163\u308c\u3066\u304a\u3051\u3070dimod\u306e\u5229\u7528\u3084D-Wave\u5b9f\u884c\u3078\u306e\u79fb\u884c\u3082\u5bb9\u6613\u306b\u306a\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n",
                "dimod\u306eSampleSet\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306edimod\u306eSamples\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002  \n",
                "[Samples](https://docs.ocean.dwavesys.com/projects/dimod/en/latest/reference/sampleset.html)"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 29,
            "metadata": {
                "colab": {},
                "colab_type": "code",
                "id": "lO8DpCkyBDQk"
            },
            "outputs": [],
            "source": [
                "# \u6700\u9069\u89e3\u3067\u3042\u308b[1, -1, 1,...]\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n",
                "correct_state = [(-1)**i for i in range(N)]\n",
                "\n",
                "# num_sweeps\u3068num_reads\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n",
                "num_sweeps_list = list(range(10, 51, 10))\n",
                "num_reads = 2000\n",
                "\n",
                "# benchmark\u95a2\u6570\u3067TTS, \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc, \u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n",
                "result = oj.solver_benchmark(\n",
                "                      solver= lambda time_param, **args: anti_ferro_solver(time_param, num_reads, h, J), \n",
                "                      time_list=num_sweeps_list, solutions=[correct_state], p_r=0.99\n",
                "              )"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 30,
            "metadata": {
                "colab": {
                    "base_uri": "https://localhost:8080/",
                    "height": 245
                },
                "colab_type": "code",
                "id": "v8feULpDBDQo",
                "outputId": "6a4eb208-1795-4aec-ed26-bde92d9c928c",
                "scrolled": true
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": [
                            "Text(0, 0.5, 'Success probability')"
                        ]
                    },
                    "execution_count": 30,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": [
                            "<Figure size 1080x216 with 3 Axes>"
                        ]
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": [
                "fig, (axL,axC,axR) = plt.subplots(ncols=3, figsize=(15,3))\n",
                "plt.subplots_adjust(wspace=0.4)\n",
                "\n",
                "fontsize = 10\n",
                "axL.plot(result['time'], result['tts'])\n",
                "axL.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axL.set_ylabel('TTS', fontsize=fontsize)\n",
                "\n",
                "axC.plot(result['time'], result['residual_energy'])\n",
                "axC.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axC.set_ylabel('Residual energy', fontsize=fontsize)\n",
                "\n",
                "axR.plot(result['time'], result['success_prob'])\n",
                "axR.set_xlabel('annealing time', fontsize=fontsize)\n",
                "axR.set_ylabel('Success probability', fontsize=fontsize)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "c3T8GiiSBDQr"
            },
            "source": [
                "3\u3064\u306e\u72b6\u614b\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u3072\u3068\u30641\u3064\u6700\u9069\u89e3\u306e\u72b6\u614b\u3092\u9078\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u6210\u529f\u78ba\u7387\u306f\u304a\u3088\u305d1/3\u304f\u3089\u3044\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002  \n",
                "\u4e0a\u306e\u6210\u529f\u78ba\u7387\u306e\u56f3\u3082\u7e26\u8ef8\u304c\u305d\u306e\u7a0b\u5ea6\u306e\u6570\u5024\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n",
                "\n",
                "\u3053\u306e\u3088\u3046\u306b\u3046\u307e\u304fsolver\u95a2\u6570\u3092\u4f5c\u3063\u3066\u304a\u3051\u3070\u3001OpenJij\u306e\u30bd\u30eb\u30d0\u30fc\u306b\u9650\u3089\u305aTTS, \u6b8b\u7559\u30a8\u30cd\u30eb\u30ae\u30fc, \u6210\u529f\u78ba\u7387\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 "
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "\u6b21\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u3053\u306e\u7ae0\u3067\u7d39\u4ecb\u3057\u305f\u6307\u6a19\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u8a08\u7b97\u3059\u308b\u6a5f\u80fd\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": []
        }
    ],
    "metadata": {
        "colab": {
            "collapsed_sections": [],
            "include_colab_link": true,
            "name": "2_Evaluation_ver008.ipynb",
            "provenance": []
        },
        "kernelspec": {
            "display_name": "Python 3",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.8.5"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 1
}