{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "# A4 - \u91cf\u5b50\u30a4\u30b8\u30f3\u30b0\u6a21\u578b"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "view-in-github"
            },
            "source": [
                "[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/OpenJij/OpenJijTutorial/blob/master/source/ja/A004-QuantumSystem.ipynb)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "colab_type": "text",
                "id": "view-in-github"
            },
            "source": [
                "\u3053\u306e\u7ae0\u3067\u306f\u91cf\u5b50 (\u4e3b\u306b\u6a2a\u78c1\u5834)\u52b9\u679c\u306e\u5165\u3063\u305f\u30a4\u30b8\u30f3\u30b0\u6a21\u578b\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002  \n",
                "\u307e\u305a\u306fGraph\u3092\u5b9a\u7fa9\u3057\u3001$J_{ij}, h_i$\u3092\u6c7a\u5b9a\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 1,
            "metadata": {},
            "outputs": [],
            "source": [
                "import cxxjij.graph as G\n",
                "#\u554f\u984c\u30b5\u30a4\u30ba\u3092100\u3068\u3057\u307e\u3059\u3002\n",
                "N = 100\n",
                "\n",
                "graph = G.Dense(N)"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 2,
            "metadata": {},
            "outputs": [],
            "source": [
                "import numpy as np\n",
                "mu, sigma = 0, 1\n",
                "\n",
                "for i in range(N):\n",
                "    for j in range(N):\n",
                "        #Jij\u306e\u5024\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5168\u4f53\u306e\u4fc2\u6570\u30921/N\u3057\u3066\u3044\u307e\u3059\u3002\n",
                "        graph[i,j] = 0 if i == j else np.random.normal()/N\n",
                "\n",
                "for i in range(N):\n",
                "    graph[i] = np.random.normal()/N"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## \u6a2a\u78c1\u5834\u30a4\u30b8\u30f3\u30b0\u6a21\u578b\n",
                "\n",
                "\u4eca\u56de\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u6a2a\u78c1\u5834\u30a4\u30b8\u30f3\u30b0\u6a21\u578b\n",
                "\n",
                "\\begin{align}\n",
                "H &= s \\left(\\sum_{i<j}J_{ij}\\sigma_i^z \\sigma_j^z + \\sum_{i=1}^{N}h_i \\sigma_i^z \\right) - \\sum_{i=1}\\Gamma (1-s) \\sigma_i^x \\\\\n",
                "\\end{align}\n",
                "\n",
                "\u3092\u7528\u3044\u307e\u3059\u3002  \n",
                "\n",
                "## \u9023\u7d9a\u865a\u6642\u9593\u91cf\u5b50\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": []
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.8.5"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 2
}